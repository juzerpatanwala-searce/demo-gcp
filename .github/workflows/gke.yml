name: Build and Deploy to GKE

on:
  workflow_dispatch:
  push:
    branches: [ "demo3" ]
    paths:
    - 'app1/**'
    - '!app2/**'

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: demo-gke-cluster    # TODO: update to cluster name
  GKE_ZONE: asia-south1-a   # TODO: update to cluster zone
  REPOSITORY: ghactions-demo # TODO: update to Artifact Registry docker repository
  IMAGE: demo-gke

jobs:
  setup-build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    #environment: GKE

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SA }}

    - name: Login to GAR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.REGION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: '${{ steps.auth.outputs.access_token }}'

    # Build the Docker image
    - name: Build
      run: |-
        ls -la app1/
        docker build \
          --tag "${{ vars.REGION }}-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" app1/Dockerfile
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "${{ vars.REGION }}-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

        # Get the GKE credentials so we can deploy to the cluster
    # - name: Set up GKE credentials
    #   uses: google-github-actions/get-gke-credentials@v0
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     sed -i "s/{{IMAGE_TAG}}/$GITHUB_SHA/g" kubernetes/deployment.yaml
    #     kubectl apply -f kubernetes/deployment.yaml
    #     kubectl apply -f kubernetes/service.yaml
  Deploy-dev:
    name: Deployment to Dev
    needs: setup-build-publish
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/deploy.yml
    with:
      namespace: dev
      environment: Dev
    secrets:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
      WIF_SA: ${{ secrets.WIF_SA }}
  
  Deploy-Staging:
    name: Deployment to Staging
    needs: setup-build-publish
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/deploy.yml
    with:
      namespace: staging
      environment: Staging
    secrets:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
      WIF_SA: ${{ secrets.WIF_SA }}

  Deploy-Production:
    name: Deployment to Production
    needs: [setup-build-publish,Deploy-Staging]
    permissions:
      contents: 'read'
      id-token: 'write'
    uses: ./.github/workflows/deploy.yml
    with:
      namespace: production
      environment: Production
    secrets:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
      WIF_SA: ${{ secrets.WIF_SA }}