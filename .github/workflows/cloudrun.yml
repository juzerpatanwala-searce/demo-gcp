name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "demo3" ]
    paths:
    - 'app2/**'
    - '!app1/**'

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  #GKE_CLUSTER: demo-gke-cluster    # TODO: update to cluster name
  #GKE_ZONE: asia-south1-a   # TODO: update to cluster zone
  REPOSITORY: ghactions-demo # TODO: update to Artifact Registry docker repository
  IMAGE: demo-cr

jobs:
  setup-build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    #environment: GKE

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SA }}

    - name: Login to GAR
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.REGION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: '${{ steps.auth.outputs.access_token }}'

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "${{ vars.REGION }}-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          app2/Dockerfile
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "${{ vars.REGION }}-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

        # Get the GKE credentials so we can deploy to the cluster